package com.hector.examenfinal.models.entity;
// Generated 2020 Feb 9 01:48:04 by Hibernate Tools 4.3.1


import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.Valid;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;

//Entidad Usuario

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name="usuario"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames="idcliente") 
)
@SequenceGenerator(name="seqUsuario", initialValue=10, allocationSize=100)
public class Usuario  implements java.io.Serializable {

	//Atributos
	
	 private static final long serialVersionUID = 1L;
	
	 private long id;
     private String user;
     private String password;
     private List<Mail> mails = new ArrayList<Mail>(0);
     private Cliente cliente;
     
    //Constructores
     
    public Usuario() {
    }

    public Usuario(long id) {
        this.id = id;
    }
    
    public Usuario(long id, String user, String password, Cliente cliente, List<Mail> mails) {
       this.id = id;
       this.user = user;
       this.password = password;
       this.cliente = cliente;
       this.mails = mails;
    }
  
    //Propiedades
    
    @Id 
  	@GeneratedValue(strategy = GenerationType.SEQUENCE , generator="seqUsuario")
    @Column(name="id", unique=true, nullable=false)
    public long getId() {
        return this.id;
    }
    
    public void setId(long id) {
        this.id = id;
    }
    
    @Valid
    @NotEmpty(message="No puede estar vacío")
    @Column(name="nombre")
    public String getUser() {
        return this.user;
    }
    
    public void setUser(String user) {
        this.user = user;
    }
    
    @Valid
    @NotEmpty(message="No puede estar vacío")
	@Size(min=4, max=12, message="El tamaño debe estar entre 4 y 12")
    @Column(name="password")
    public String getPassword() {
        return this.password;
    }
    
   
    public void setPassword(String password) {
        this.password = password;
    }
    
    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idcliente", nullable=false)
    public Cliente getCliente() {
        return this.cliente;
    }
    
    
    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }
    @Valid
    @OneToMany(fetch=FetchType.LAZY, mappedBy="usuario",cascade=CascadeType.ALL)
    public List<Mail> getMails() {
        return this.mails;
    }
   
    public void setMails(List<Mail> mails) {
        this.mails = mails;
    }
}



